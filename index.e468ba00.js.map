{"mappings":"ACMsB,SAAS,aAAa,CAAC","sources":["<anon>","src/js/cards-home.js"],"sourcesContent":["const apiKey = \"cc5e154eef1a5f4b837eb970b7b620d1\";\nconst baseUrl = \"https://api.themoviedb.org/3\";\nlet page = 1;\nconst galleryMovies = document.querySelector(\".cards-home-list\");\nasync function fetchPopularMovie(page) {\n    const url = new URL(`${baseUrl}/trending/movie/week`);\n    async function fetchMovieId(id) {\n        const data = await res.json();\n        return data;\n    }\n    async function fetchGenres() {\n        const url = new URL(`${baseUrl}/genre/movie/list`);\n        url.searchParams.append(\"api_key\", apiKey);\n        const res1 = await fetch(url);\n        const data = await res1.json();\n        return data.genres;\n    }\n    function getGenres(arrayId, genres) {\n        const arrayGenres = [];\n        for (const value of genres){\n            if (arrayId === \"N/A\" || arrayId.length === 0) {\n                arrayGenres.push(\"Other\");\n                break;\n            } else if (arrayId.includes(value.id)) arrayGenres.push(value.name);\n        }\n        if (arrayGenres.length > 2) arrayGenres.splice(2, arrayGenres.length - 2, \"Other\");\n        return arrayGenres.join(\", \");\n    }\n    async function renderPopularMovies(movies) {\n        const genres = await fetchGenres();\n        return movies.map(({ id, poster_path, title, release_date, genre_ids, original_title, popularity, overview } = movies)=>{\n            const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : NO_POSTER;\n            const year = release_date ? release_date.split(\"-\")[0] : \"Unknown\";\n            const checkGenres = genre_ids ? getGenres(genre_ids, genres) : \"Unknown\";\n            return `\n      <li class='cards-home-movie_list_item' data-id=\"${id}\" >\n      <div href=\"\" class='cards-home-movie-link' id=${id}>\n      <div class=\"cards-home-movie-photo\"\n        data-id=\"${id}\"\n        data-poster_path=\"${poster_path}\"\n        data-title=\"${title}\"\n        data-genre_ids=\"${checkGenres}\"\n        data-original_title=\"${original_title}\"\n        data-release_date=\"${release_date}\"\n      ></div>\n        <img class=\"cards-home-movie-image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='cards-home-movie-info'>\n            <p class='cards-home-movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='cards-home-movie-date'>\n              <span>${checkGenres} | ${year}</span>\n            </p>\n        </div>\n        </div>\n      </li>\n      `;\n        }).join(\"\");\n    }\n    fetchPopularMovie(page).then((res1)=>{\n        const obj = res1.results;\n        return renderPopularMovies(obj);\n    }).then((res1)=>{\n        galleryMovies.insertAdjacentHTML(\"beforeend\", res1);\n    });\n}\n\n//# sourceMappingURL=index.e468ba00.js.map\n","const apiKey = 'cc5e154eef1a5f4b837eb970b7b620d1';\n\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nlet page = 1;\n\nconst galleryMovies = document.querySelector('.cards-home-list');\n\n\n\n\n\nasync function fetchPopularMovie(page) {\n\n  const url = new URL(`${baseUrl}/trending/movie/week`);\n\n async function fetchMovieId(id) {\n\n  const data = await res.json();\n\n  return data;\n\n}\n\n\nasync function fetchGenres() {\n\n  const url = new URL(`${baseUrl}/genre/movie/list`);\n\n  url.searchParams.append('api_key', apiKey);\n\n  const res = await fetch(url);\n  const data = await res.json();\n  return data.genres;\n}\n\nfunction getGenres(arrayId, genres) {\n  const arrayGenres = [];\n\n  for (const value of genres) {\n    if (arrayId === 'N/A' || arrayId.length === 0) {\n      arrayGenres.push('Other');\n      break;\n    } else if (arrayId.includes(value.id)) {\n      arrayGenres.push(value.name);\n    }\n  }\n\n  if (arrayGenres.length > 2) {\n    arrayGenres.splice(2, arrayGenres.length - 2, 'Other');\n  }\n\n  return arrayGenres.join(', ');\n}\n\nasync function renderPopularMovies(movies) {\n  const genres = await fetchGenres();\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        popularity,\n        overview,\n      } = movies) => {\n        const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : NO_POSTER;\n        const year = release_date ? release_date.split('-')[0] : 'Unknown';\n        const checkGenres = genre_ids ? getGenres(genre_ids, genres) : 'Unknown';\n        return `\n      <li class='cards-home-movie_list_item' data-id=\"${id}\" >\n      <div href=\"\" class='cards-home-movie-link' id=${id}>\n      <div class=\"cards-home-movie-photo\"\n        data-id=\"${id}\"\n        data-poster_path=\"${poster_path}\"\n        data-title=\"${title}\"\n        data-genre_ids=\"${checkGenres}\"\n        data-original_title=\"${original_title}\"\n        data-release_date=\"${release_date}\"\n      ></div>\n        <img class=\"cards-home-movie-image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='cards-home-movie-info'>\n            <p class='cards-home-movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='cards-home-movie-date'>\n              <span>${checkGenres} | ${year}</span>\n            </p>\n        </div>\n        </div>\n      </li>\n      `;\n      },\n    )\n    .join('');\n}\n\nfetchPopularMovie(page)\n  .then(res => {\n    const obj = res.results;\n    return renderPopularMovies(obj);\n  })\n  .then(res => {\n    galleryMovies.insertAdjacentHTML('beforeend', res);\n  })\n}"],"names":["document","querySelector"],"version":3,"file":"index.e468ba00.js.map"}