{"mappings":"AAAA,MAAMA,OAAS,mCACTC,QAAU,+BACVC,UAAY,uDACZC,cAAgBC,SAASC,cAAc,sBAC7C,IAAIC,KAAO,EAEXC,eAAeC,kBAAkBF,GAC/B,MAAMG,EAAM,IAAIC,IAAI,GAAGT,+BACvBQ,EAAIE,aAAaC,OAAO,UAAWZ,QACnCS,EAAIE,aAAaC,OAAO,OAAQN,GAEhC,MAAMO,QAAYC,MAAML,GAExB,aADmBI,EAAIE,MAEzB,CAEAR,eAAeS,yBACb,MAAMP,EAAM,IAAIC,IAAI,GAAGT,8BACvBQ,EAAIE,aAAaC,OAAO,UAAWZ,QAEnC,MAAMa,QAAYC,MAAML,GAExB,aADmBI,EAAIE,MAEzB,CAEAR,eAAeU,aAAaC,GAC1B,MAAMT,EAAM,IAAIC,IAAI,GAAGT,iBAAiBiB,KACxCT,EAAIE,aAAaC,OAAO,UAAWZ,QAEnC,MAAMa,QAAYC,MAAML,GAExB,aADmBI,EAAIE,MAEzB,CAEAR,eAAeY,cACb,MAAMV,EAAM,IAAIC,IAAI,GAAGT,4BACvBQ,EAAIE,aAAaC,OAAO,UAAWZ,QAEnC,MAAMa,QAAYC,MAAML,GAExB,aADmBI,EAAIE,QACXK,MACd,CAEA,SAASC,UAAUC,EAASF,GAC1B,MAAMG,EAAc,GAEpB,IAAK,MAAMC,KAASJ,EAAQ,CAC1B,GAAgB,QAAZE,GAAwC,IAAnBA,EAAQG,OAAc,CAC7CF,EAAYG,KAAK,SACjB,KACF,CAAWJ,EAAQK,SAASH,EAAMN,KAChCK,EAAYG,KAAKF,EAAMI,KAE3B,CAMA,OAJIL,EAAYE,OAAS,GACvBF,EAAYM,OAAO,EAAGN,EAAYE,OAAS,EAAG,SAGzCF,EAAYO,KAAK,KAC1B,CAEAvB,eAAewB,oBAAoBC,GACjC,MAAMZ,QAAeD,cACrB,OAAOa,EACJC,KACC,EACEf,KACAgB,cACAC,QACAC,eACAC,YACAC,iBACAC,aACAC,YACER,KACF,MAAMS,EAASP,EAAc,kCAAkCA,IAAgBhC,UACzEwC,EAAON,EAAeA,EAAaO,MAAM,KAAK,GAAK,UACnDC,EAAcP,EAAYhB,UAAUgB,EAAWjB,GAAU,UAC/D,MAAO,2DACyCF,6DACFA,mEAEnCA,iCACSgB,2BACNC,+BACIS,oCACKN,kCACFF,sEAEqBK,iBAAsBH,uIAGrDH,EAAMU,2GAGHD,OAAiBF,iFAKhC,IAGFZ,KAAK,GACV,CAEAtB,kBAAkBF,MACfwC,MAAKjC,GAEGkB,oBADKlB,EAAIkC,WAGjBD,MAAKjC,IACJV,cAAc6C,mBAAmB,YAAanC,EAAA","sources":["src/js/cards-home.js"],"sourcesContent":["const apiKey = 'cc5e154eef1a5f4b837eb970b7b620d1';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst NO_POSTER = `https://i.ibb.co/r76r6Vt/oie-30214851-Ms-Wl-PTS0.png`;\nconst galleryMovies = document.querySelector('.cards-home-movies');\nlet page = 1;\n\nasync function fetchPopularMovie(page) {\n  const url = new URL(`${baseUrl}/trending/movie/week`);\n  url.searchParams.append('api_key', apiKey);\n  url.searchParams.append('page', page);\n\n  const res = await fetch(url);\n  const data = await res.json();\n  return data;\n}\n\nasync function fetchMostPopularMovies() {\n  const url = new URL(`${baseUrl}/trending/movie/day`);\n  url.searchParams.append('api_key', apiKey);\n\n  const res = await fetch(url);\n  const data = await res.json();\n  return data;\n}\n\nasync function fetchMovieId(id) {\n  const url = new URL(`${baseUrl}/movie/${id}`);\n  url.searchParams.append('api_key', apiKey);\n\n  const res = await fetch(url);\n  const data = await res.json();\n  return data;\n}\n\nasync function fetchGenres() {\n  const url = new URL(`${baseUrl}/genre/movie/list`);\n  url.searchParams.append('api_key', apiKey);\n\n  const res = await fetch(url);\n  const data = await res.json();\n  return data.genres;\n}\n\nfunction getGenres(arrayId, genres) {\n  const arrayGenres = [];\n\n  for (const value of genres) {\n    if (arrayId === 'N/A' || arrayId.length === 0) {\n      arrayGenres.push('Other');\n      break;\n    } else if (arrayId.includes(value.id)) {\n      arrayGenres.push(value.name);\n    }\n  }\n\n  if (arrayGenres.length > 2) {\n    arrayGenres.splice(2, arrayGenres.length - 2, 'Other');\n  }\n\n  return arrayGenres.join(', ');\n}\n\nasync function renderPopularMovies(movies) {\n  const genres = await fetchGenres();\n  return movies\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        release_date,\n        genre_ids,\n        original_title,\n        popularity,\n        overview,\n      } = movies) => {\n        const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : NO_POSTER;\n        const year = release_date ? release_date.split('-')[0] : 'Unknown';\n        const checkGenres = genre_ids ? getGenres(genre_ids, genres) : 'Unknown';\n        return `\n      <li class='cards-home-movie_list_item' data-id=\"${id}\" >\n      <div href=\"\" class='cards-home-movie-link' id=${id}>\n      <div class=\"cards-home-movie-photo\"\n        data-id=\"${id}\"\n        data-poster_path=\"${poster_path}\"\n        data-title=\"${title}\"\n        data-genre_ids=\"${checkGenres}\"\n        data-original_title=\"${original_title}\"\n        data-release_date=\"${release_date}\"\n      ></div>\n        <img class=\"cards-home-movie-image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\n        <div class='cards-home-movie-info'>\n            <p class='cards-home-movie-title'>\n              <b>${title.toUpperCase()}</b>\n            </p>\n            <p class='cards-home-movie-date'>\n              <span>${checkGenres} | ${year}</span>\n            </p>\n        </div>\n        </div>\n      </li>\n      `;\n      },\n    )\n    .join('');\n}\n\nfetchPopularMovie(page)\n  .then(res => {\n    const obj = res.results;\n    return renderPopularMovies(obj);\n  })\n  .then(res => {\n    galleryMovies.insertAdjacentHTML('beforeend', res);\n  });\n"],"names":["apiKey","baseUrl","NO_POSTER","galleryMovies","document","querySelector","page","async","fetchPopularMovie","url","URL","searchParams","append","res","fetch","json","fetchMostPopularMovies","fetchMovieId","id","fetchGenres","genres","getGenres","arrayId","arrayGenres","value","length","push","includes","name","splice","join","renderPopularMovies","movies","map","poster_path","title","release_date","genre_ids","original_title","popularity","overview","poster","year","split","checkGenres","toUpperCase","then","results","insertAdjacentHTML"],"version":3,"file":"index.5e1acbd0.js.map"}