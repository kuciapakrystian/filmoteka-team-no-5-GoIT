{"mappings":"AAAA,MAAM,SAAS;AAEf,MAAM,UAAU;AAEhB,IAAI,OAAO;AAEX,MAAM,gBAAgB,SAAS,aAAa,CAAC;AAM7C,eAAe,kBAAkB,IAAI;IAEnC,MAAM,MAAM,IAAI,IAAI,CAAC,EAAE,QAAQ,oBAAoB,CAAC;IAErD,eAAe,aAAa,EAAE;QAE7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,OAAO;IAET;IAGA,eAAe;QAEb,MAAM,MAAM,IAAI,IAAI,CAAC,EAAE,QAAQ,iBAAiB,CAAC;QAEjD,IAAI,YAAY,CAAC,MAAM,CAAC,WAAW;QAEnC,MAAM,OAAM,MAAM,MAAM;QACxB,MAAM,OAAO,MAAM,KAAI,IAAI;QAC3B,OAAO,KAAK,MAAM;IACpB;IAEA,SAAS,UAAU,OAAO,EAAE,MAAM;QAChC,MAAM,cAAc,EAAE;QAEtB,KAAK,MAAM,SAAS,OAAQ;YAC1B,IAAI,YAAY,SAAS,QAAQ,MAAM,KAAK,GAAG;gBAC7C,YAAY,IAAI,CAAC;gBACjB;YACF,OAAO,IAAI,QAAQ,QAAQ,CAAC,MAAM,EAAE,GAClC,YAAY,IAAI,CAAC,MAAM,IAAI;QAE/B;QAEA,IAAI,YAAY,MAAM,GAAG,GACvB,YAAY,MAAM,CAAC,GAAG,YAAY,MAAM,GAAG,GAAG;QAGhD,OAAO,YAAY,IAAI,CAAC;IAC1B;IAEA,eAAe,oBAAoB,MAAM;QACvC,MAAM,SAAS,MAAM;QACrB,OAAO,OACJ,GAAG,CACF,CAAC,EACC,EAAE,EACF,WAAW,EACX,KAAK,EACL,YAAY,EACZ,SAAS,EACT,cAAc,EACd,UAAU,EACV,QAAQ,EACT,GAAG,MAAM;YACR,MAAM,SAAS,cAAc,CAAC,+BAA+B,EAAE,YAAY,CAAC,GAAG;YAC/E,MAAM,OAAO,eAAe,aAAa,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;YACzD,MAAM,cAAc,YAAY,UAAU,WAAW,UAAU;YAC/D,OAAO,CAAC;sDACsC,EAAE,GAAG;oDACP,EAAE,GAAG;;iBAExC,EAAE,GAAG;0BACI,EAAE,YAAY;oBACpB,EAAE,MAAM;wBACJ,EAAE,YAAY;6BACT,EAAE,eAAe;2BACnB,EAAE,aAAa;;gDAEM,EAAE,OAAO,aAAa,EAAE,eAAe;;;iBAGtE,EAAE,MAAM,WAAW,GAAG;;;oBAGnB,EAAE,YAAY,GAAG,EAAE,KAAK;;;;;MAKtC,CAAC;QACD,GAED,IAAI,CAAC;IACV;IAEA,kBAAkB,MACf,IAAI,CAAC,CAAA;QACJ,MAAM,MAAM,KAAI,OAAO;QACvB,OAAO,oBAAoB;IAC7B,GACC,IAAI,CAAC,CAAA;QACJ,cAAc,kBAAkB,CAAC,aAAa;IAChD;AACF","sources":["src/js/cards-home.js"],"sourcesContent":["const apiKey = 'cc5e154eef1a5f4b837eb970b7b620d1';\r\n\r\nconst baseUrl = 'https://api.themoviedb.org/3';\r\n\r\nlet page = 1;\r\n\r\nconst galleryMovies = document.querySelector('.cards-home-list');\r\n\r\n\r\n\r\n\r\n\r\nasync function fetchPopularMovie(page) {\r\n\r\n  const url = new URL(`${baseUrl}/trending/movie/week`);\r\n\r\n async function fetchMovieId(id) {\r\n\r\n  const data = await res.json();\r\n\r\n  return data;\r\n\r\n}\r\n\r\n\r\nasync function fetchGenres() {\r\n\r\n  const url = new URL(`${baseUrl}/genre/movie/list`);\r\n\r\n  url.searchParams.append('api_key', apiKey);\r\n\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n  return data.genres;\r\n}\r\n\r\nfunction getGenres(arrayId, genres) {\r\n  const arrayGenres = [];\r\n\r\n  for (const value of genres) {\r\n    if (arrayId === 'N/A' || arrayId.length === 0) {\r\n      arrayGenres.push('Other');\r\n      break;\r\n    } else if (arrayId.includes(value.id)) {\r\n      arrayGenres.push(value.name);\r\n    }\r\n  }\r\n\r\n  if (arrayGenres.length > 2) {\r\n    arrayGenres.splice(2, arrayGenres.length - 2, 'Other');\r\n  }\r\n\r\n  return arrayGenres.join(', ');\r\n}\r\n\r\nasync function renderPopularMovies(movies) {\r\n  const genres = await fetchGenres();\r\n  return movies\r\n    .map(\r\n      ({\r\n        id,\r\n        poster_path,\r\n        title,\r\n        release_date,\r\n        genre_ids,\r\n        original_title,\r\n        popularity,\r\n        overview,\r\n      } = movies) => {\r\n        const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : NO_POSTER;\r\n        const year = release_date ? release_date.split('-')[0] : 'Unknown';\r\n        const checkGenres = genre_ids ? getGenres(genre_ids, genres) : 'Unknown';\r\n        return `\r\n      <li class='cards-home-movie_list_item' data-id=\"${id}\" >\r\n      <div href=\"\" class='cards-home-movie-link' id=${id}>\r\n      <div class=\"cards-home-movie-photo\"\r\n        data-id=\"${id}\"\r\n        data-poster_path=\"${poster_path}\"\r\n        data-title=\"${title}\"\r\n        data-genre_ids=\"${checkGenres}\"\r\n        data-original_title=\"${original_title}\"\r\n        data-release_date=\"${release_date}\"\r\n      ></div>\r\n        <img class=\"cards-home-movie-image\" src=${poster} alt='Poster ${original_title}' loading='lazy' />\r\n        <div class='cards-home-movie-info'>\r\n            <p class='cards-home-movie-title'>\r\n              <b>${title.toUpperCase()}</b>\r\n            </p>\r\n            <p class='cards-home-movie-date'>\r\n              <span>${checkGenres} | ${year}</span>\r\n            </p>\r\n        </div>\r\n        </div>\r\n      </li>\r\n      `;\r\n      },\r\n    )\r\n    .join('');\r\n}\r\n\r\nfetchPopularMovie(page)\r\n  .then(res => {\r\n    const obj = res.results;\r\n    return renderPopularMovies(obj);\r\n  })\r\n  .then(res => {\r\n    galleryMovies.insertAdjacentHTML('beforeend', res);\r\n  })\r\n}"],"names":[],"version":3,"file":"index.3d1ecb50.js.map","sourceRoot":"/__parcel_source_root/"}